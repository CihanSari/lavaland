{"version":3,"sources":["../lavalandcommon/clientmessages.ts","../lavalandcommon/hostmessages.ts","../lavalandcommon/neighbors.ts","../lavalandcommon/tiletypes.ts","$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/lava-game-finish/lava-game-finish.component.html","src/app/lava-header/lava-header.component.html","src/app/lava-leaderboard/lava-leaderboard.component.html","src/app/lava-notification/lava-notification.component.html","src/app/lava-statistics/lava-statistics.component.html","node_modules/tslib/tslib.es6.js","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/backend.service.ts","src/app/exit.ts","src/app/isDebug.ts","src/app/lava-game-finish/lava-game-finish.component.css","src/app/lava-game-finish/lava-game-finish.component.ts","src/app/lava-header/lava-header.component.css","src/app/lava-header/lava-header.component.ts","src/app/lava-leaderboard/lava-leaderboard.component.css","src/app/lava-leaderboard/lava-leaderboard.component.ts","src/app/lava-notification/lava-notification.component.css","src/app/lava-notification/lava-notification.component.ts","src/app/lava-statistics/lava-statistics.component.css","src/app/lava-statistics/lava-statistics.component.ts","src/app/lavastate.ts","src/app/player.ts","src/app/playerSpeed.ts","src/app/speedboost.ts","src/app/speedbump.ts","src/app/touchableObject.ts","src/app/turn.service.ts","src/app/turnevent.ts","src/app/wisp.ts","src/environments/environment.ts","src/lavacanvas/asset.ts","src/lavacanvas/canvaseventhandler.ts","src/lavacanvas/lavacanvas.component.ts","src/lavacanvas/lavacanvas.module.ts","src/lavacanvas/lavacanvasinternal.service.ts","src/lavacanvas/world2canvas.ts","src/lavacanvas/worldobject.ts","src/lavacanvas/worldobjectinternal.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export enum ClientMessageReasons {\r\n  GameSessionRequest,\r\n  MapRequest,\r\n  MapFinished,\r\n  LeaderboardRequest\r\n}\r\n\r\nexport interface LavalandClientMessageBase {\r\n  gameId?: string;\r\n}\r\n\r\nexport interface GameSessionRequest extends LavalandClientMessageBase {\r\n  gameId?: never;\r\n}\r\n\r\nexport interface MapFinished extends LavalandClientMessageBase {\r\n  gameId: string;\r\n  duration: number;\r\n  name: string;\r\n  finishMethod: \"Gate\" | \"Wisps\" | \"Debug\";\r\n}\r\n\r\nexport interface LeaderboardRequest extends LavalandClientMessageBase {\r\n  gameId?: never;\r\n  finishMethod: \"Gate\" | \"Wisps\" | \"Debug\";\r\n}\r\n\r\nexport type LavalandClientMessage =\r\n  | GameSessionRequest\r\n  | MapFinished\r\n  | LeaderboardRequest;\r\n\r\n\r\nexport const apiPaths = {\r\n  [ClientMessageReasons.GameSessionRequest]: \"api/gamesession\",\r\n  [ClientMessageReasons.LeaderboardRequest]: \"api/leaderboard\",\r\n  [ClientMessageReasons.MapFinished]: \"api/mapfinished\"\r\n};","import { WorldCoordinates, GameMap } from \"./worldcoordinates\";\r\n\r\nexport enum HostMessageReasons {\r\n  GameSessionRequestResponse,\r\n  MapFinishedResponse,\r\n  GameNotFound,\r\n  LeaderboardResponse\r\n}\r\n\r\nexport interface LavalandHostMessageBase {\r\n  messageType: HostMessageReasons;\r\n}\r\n\r\nexport interface GameSessionRequestResponse extends LavalandHostMessageBase {\r\n  messageType: HostMessageReasons.GameSessionRequestResponse;\r\n  gameId: string;\r\n  gameMap: GameMap;\r\n}\r\n\r\nexport interface GameNotFound extends LavalandHostMessageBase {\r\n  messageType: HostMessageReasons.GameNotFound;\r\n  gameId: string;\r\n}\r\n\r\nexport interface MapFinishedResponse extends LavalandHostMessageBase {\r\n  messageType: HostMessageReasons.MapFinishedResponse;\r\n  gameId: string;\r\n  leaderboard: {name:string, duration: number}[];\r\n  rank: number,\r\n  finishMethod: \"Gate\" | \"Wisps\" | \"Debug\";\r\n}\r\n\r\nexport interface LeaderboardResponse extends LavalandHostMessageBase {\r\n  messageType: HostMessageReasons.LeaderboardResponse;\r\n  leaderboard: {name:string, duration: number}[];\r\n  duration: number;\r\n  finishMethod: \"Gate\" | \"Wisps\" | \"Debug\";\r\n}\r\n\r\nexport type LavalandHostMessage =\r\n  | GameSessionRequestResponse\r\n  | MapFinishedResponse\r\n  | GameNotFound\r\n  | LeaderboardResponse;\r\n","export class Neighbors<T> {\r\n  constructor(\r\n    readonly north: T,\r\n    readonly northEast: T,\r\n    readonly east: T,\r\n    readonly southEast: T,\r\n    readonly south: T,\r\n    readonly southWest: T,\r\n    readonly west: T,\r\n    readonly northWest: T\r\n  ) {}\r\n\r\n  compare(other: Neighbors<T>) {\r\n    if (other.north != this.north) {\r\n      return false;\r\n    } else if (other.northEast != this.northEast) {\r\n      return false;\r\n    } else if (other.east != this.east) {\r\n      return false;\r\n    } else if (other.southEast != this.southEast) {\r\n      return false;\r\n    } else if (other.south != this.south) {\r\n      return false;\r\n    } else if (other.southWest != this.southWest) {\r\n      return false;\r\n    } else if (other.west != this.west) {\r\n      return false;\r\n    } else if (other.northWest != this.northWest) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  to8Array() {\r\n    return [\r\n      this.north,\r\n      this.northEast,\r\n      this.east,\r\n      this.southEast,\r\n      this.south,\r\n      this.southWest,\r\n      this.west,\r\n      this.northWest\r\n    ];\r\n  }\r\n\r\n  to4Array() {\r\n    return [this.north, this.east, this.south, this.west];\r\n  }\r\n}\r\n","export enum TileType {\r\n  Water = 0,\r\n  Land = 1,\r\n  Lava = 2,\r\n  Count = 3\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<lavaheader class=\\\"header lavatextFields\\\"></lavaheader>\\r\\n\\r\\n<lavastatistics class=\\\"statistics lavatextFields\\\" [remainingWisps]=\\\"totalNumberOfWisps-numberOfWispsCaught\\\" [currentSpeed]=\\\"player.currentSpeed\\\"\\r\\n  [currentRadius]=\\\"currentRadius()\\\" [numberOfSeconds]=\\\"secondsPassed\\\"></lavastatistics>\\r\\n<lavaCanvas class=\\\"fullScreen\\\" [settings]=\\\"mapSettings\\\" [player]=\\\"player\\\" [objects]=\\\"objects\\\" (mapDragRequest)=\\\"currentPlayerMovementRequest($event)\\\"></lavaCanvas>\\r\\n<lavanotification class=\\\"notification lavatextFields\\\" *ngIf=\\\"notificationText.length>0\\\" [notificationText]=\\\"notificationText\\\"></lavanotification>\\r\\n\"","export default \"<h1 mat-dialog-title>Congratulations</h1>\\r\\n<div mat-dialog-content>\\r\\n  <h3>You have won in {{data.time}} seconds!</h3>\\r\\n  <h3>Enter name for leaderboard?</h3>\\r\\n  <mat-form-field>\\r\\n    <input #nameField matInput [(ngModel)]=\\\"data.name\\\" placeholder=\\\"Name\\\" pattern=\\\"[A-Za-z0-9]{3,}\\\" (input)=\\\"checkName()\\\" required>\\r\\n  </mat-form-field>\\r\\n  <p *ngIf=\\\"invalidName\\\">At least three English characters.</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-flat-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-flat-button [disabled]=\\\"invalidName\\\" cdkFocusInitial (click)=\\\"ok()\\\">Ok</button>\\r\\n</div>\\r\\n\"","export default \"<h1>Lava Land</h1>\\r\\n\"","export default \"<h1 mat-dialog-title>Leaderboards</h1>\\r\\n<ol>\\r\\n  <li *ngFor=\\\"let entry of data\\\">\\r\\n    {{entry.name}} ({{entry.duration}} seconds)\\r\\n  </li>\\r\\n</ol>\\r\\n\"","export default \"<p *ngFor=\\\"let text of notificationText\\\">{{text}}</p>\\r\\n\"","export default \"<div class=\\\"sidenav\\\">\\r\\n  <table>\\r\\n    <tr>\\r\\n      <td class=\\\"title\\\">Remaining</td>\\r\\n      <td class=\\\"value\\\">{{remainingWisps}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td class=\\\"title\\\">Time</td>\\r\\n      <td class=\\\"value\\\">{{numberOfSeconds}}s</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td class=\\\"title\\\">Speed</td>\\r\\n      <td class=\\\"value\\\">{{currentSpeed}}%</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td class=\\\"title\\\">Power</td>\\r\\n      <td class=\\\"value\\\">{{currentRadius}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \"@import url(//fonts.googleapis.com/css?family=Caveat);\\r\\nbody {\\r\\n  color: rgb(212, 0, 212);\\r\\n  text-shadow: 2px 2px rgb(0, 0, 0);\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n}\\r\\n.header {\\r\\n  position: fixed;\\r\\n  z-index: 1;\\r\\n  top: 0;\\r\\n  left: 35%;\\r\\n  right: 35%;\\r\\n}\\r\\n.statistics {\\r\\n  position: fixed;\\r\\n  z-index: 1;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n}\\r\\n.notification {\\r\\n  position: fixed;\\r\\n  z-index: 1;\\r\\n  bottom: 0;\\r\\n  left: 20%;\\r\\n  right: 20%;\\r\\n}\\r\\n.lavatextFields {\\r\\n  pointer-events: none;\\r\\n  -webkit-user-select: none;\\r\\n     -moz-user-select: none;\\r\\n      -ms-user-select: none;\\r\\n          user-select: none;\\r\\n}\\r\\n.fullScreen {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  position: absolute;\\r\\n  display: flex;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscURBQXFEO0FBQ3JEO0VBQ0UsdUJBQXVCO0VBQ3ZCLGlDQUFpQztFQUNqQyw4QkFBOEI7QUFDaEM7QUFFQTtFQUNFLGVBQWU7RUFDZixVQUFVO0VBQ1YsTUFBTTtFQUNOLFNBQVM7RUFDVCxVQUFVO0FBQ1o7QUFFQTtFQUNFLGVBQWU7RUFDZixVQUFVO0VBQ1YsU0FBUztFQUNULE9BQU87QUFDVDtBQUVBO0VBQ0UsZUFBZTtFQUNmLFVBQVU7RUFDVixTQUFTO0VBQ1QsU0FBUztFQUNULFVBQVU7QUFDWjtBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLHlCQUFpQjtLQUFqQixzQkFBaUI7TUFBakIscUJBQWlCO1VBQWpCLGlCQUFpQjtBQUNuQjtBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLE9BQU87RUFDUCxNQUFNO0FBQ1IiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DYXZlYXQpO1xyXG5ib2R5IHtcclxuICBjb2xvcjogcmdiKDIxMiwgMCwgMjEyKTtcclxuICB0ZXh0LXNoYWRvdzogMnB4IDJweCByZ2IoMCwgMCwgMCk7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2F2ZWF0XCIsIGN1cnNpdmU7XHJcbn1cclxuXHJcbi5oZWFkZXIge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB6LWluZGV4OiAxO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAzNSU7XHJcbiAgcmlnaHQ6IDM1JTtcclxufVxyXG5cclxuLnN0YXRpc3RpY3Mge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB6LWluZGV4OiAxO1xyXG4gIGJvdHRvbTogMDtcclxuICBsZWZ0OiAwO1xyXG59XHJcblxyXG4ubm90aWZpY2F0aW9uIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgei1pbmRleDogMTtcclxuICBib3R0b206IDA7XHJcbiAgbGVmdDogMjAlO1xyXG4gIHJpZ2h0OiAyMCU7XHJcbn1cclxuXHJcbi5sYXZhdGV4dEZpZWxkcyB7XHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbn1cclxuXHJcbi5mdWxsU2NyZWVuIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgbGVmdDogMDtcclxuICB0b3A6IDA7XHJcbn1cclxuIl19 */\"","import { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { GameMap, WorldCoordinates } from '../../../lavalandcommon';\r\nimport { MatDialog } from '../../node_modules/@angular/material';\r\nimport * as LavaCanvas from '../lavacanvas';\r\nimport { WorldObject } from '../lavacanvas/worldobject';\r\nimport { BackendService } from './backend.service';\r\nimport { ExitPortal } from './exit';\r\nimport { isDebug } from './isDebug';\r\nimport { LavaGameFinishComponent } from './lava-game-finish/lava-game-finish.component';\r\nimport { LavaLeaderboardComponent, LeaderboardData } from './lava-leaderboard/lava-leaderboard.component';\r\nimport { LavaState } from './lavastate';\r\nimport { PlayerObject } from './player';\r\nimport { SpeedBoost } from './speedboost';\r\nimport { SpeedBump } from './speedbump';\r\nimport { TurnService } from './turn.service';\r\nimport { TurnEventSubscription } from './turnevent';\r\nimport { Wisp } from './wisp';\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LavaLandComponent implements OnInit {\r\n  // Map objects\r\n  public player: PlayerObject = null;\r\n  public objects: WorldObject[] = [];\r\n\r\n  private mapWisps: Wisp[] = [];\r\n  private mapSpeedBoosters: SpeedBoost[] = [];\r\n  private mapSpeedBumps: SpeedBump[] = [];\r\n  private exitPortalsHidden: ExitPortal[] = [];\r\n  private exitPortalsOpened: ExitPortal[] = [];\r\n  // This game's details\r\n  public gameState = new BehaviorSubject<LavaState>(LavaState.Starting);\r\n  public startTime = new Date();\r\n  public secondsPassed = 0;\r\n\r\n  // Player statistics\r\n  public totalNumberOfWisps = 20;\r\n  public numberOfWispsCaught = 0;\r\n  private playerInfluenceRadius = 1;\r\n  // Notification text\r\n  public notificationText: string[] = [];\r\n\r\n  public mapSettings: LavaCanvas.MapSettings;\r\n  @ViewChild(\"canvasContainer\", { read: ElementRef, static: false }) screenCanvas: ElementRef;\r\n\r\n  constructor(private turnService: TurnService,\r\n    private backendService: BackendService,\r\n    public dialog: MatDialog) {\r\n    this.player = new PlayerObject(new LavaCanvas.Asset(\r\n      \"/assets/characters/ralph.png\", LavaCanvas.AssetColor.OriginalColor,\r\n      { x: 1, y: 2 }));\r\n  }\r\n  public async ngOnInit() {\r\n    //--------------------------------------------------------\r\n    // ***                                                ***\r\n    //\r\n    //                  Connect to backend\r\n    //\r\n    // ***                                                ***\r\n    //--------------------------------------------------------\r\n    this.backendService.$map.subscribe(\r\n      map => this.onMapReceived(map),\r\n      exception => {\r\n        if (isDebug()) {\r\n          console.warn(\"[LavaLandComponent] Map error!\");\r\n          console.error(exception);\r\n        }\r\n      },\r\n      () => {\r\n        if (isDebug()) {\r\n          console.warn(\"[LavaLandComponent] Map subscription completed!\");\r\n        }\r\n      });\r\n\r\n    this.backendService.$leaderboard.subscribe(\r\n      leaderboard => this.showLeaderboard(leaderboard));\r\n  }\r\n\r\n  private async onMapReceived(map: GameMap) {\r\n    //--------------------------------------------------------\r\n    // ***                                                ***\r\n    //\r\n    //                  Populate map tiles\r\n    //\r\n    // ***                                                ***\r\n    //--------------------------------------------------------\r\n\r\n    this.mapSettings = {\r\n      assets: [\r\n        new LavaCanvas.Asset(\"/assets/maptiles/water.png\"),\r\n        new LavaCanvas.Asset(\"/assets/maptiles/land.png\"),\r\n        new LavaCanvas.Asset(\"/assets/maptiles/lava.png\")\r\n      ],\r\n      map\r\n    };\r\n\r\n    //--------------------------------------------------------\r\n    // ***                                                ***\r\n    //\r\n    //                  Populate map players and objects\r\n    //\r\n    // ***                                                ***\r\n    //--------------------------------------------------------\r\n\r\n    for (let i = 0; i < this.totalNumberOfWisps; i += 1) {\r\n      this.mapWisps.push(new Wisp(new LavaCanvas.Asset(\r\n        \"/assets/characters/wisp.png\", LavaCanvas.AssetColor.RandomColor,\r\n        { x: 1, y: 2 })));\r\n    }\r\n    for (let i = 0; i < 20; i += 1) {\r\n      this.mapSpeedBoosters.push(new SpeedBoost(\r\n        new LavaCanvas.Asset(\"/assets/resources/GoodMushroom.png\",\r\n          LavaCanvas.AssetColor.OriginalColor)));\r\n    }\r\n    for (let i = 0; i < 10; i += 1) {\r\n      this.mapSpeedBumps.push(new SpeedBump(\r\n        new LavaCanvas.Asset(\"/assets/resources/RedMushroom.png\",\r\n          LavaCanvas.AssetColor.OriginalColor)));\r\n    }\r\n    for (let i = 0; i < 10; i += 1) {\r\n      const exitPortalObject = new ExitPortal(new LavaCanvas.Asset(\r\n        \"/assets/resources/exitPortal.png\",\r\n        LavaCanvas.AssetColor.OriginalColor, { x: 1, y: 2 }));\r\n      exitPortalObject.setHidden();\r\n      this.exitPortalsHidden.push(exitPortalObject);\r\n    }\r\n\r\n    this.objects = [\r\n      ...this.mapWisps,\r\n      ...this.mapSpeedBoosters,\r\n      ...this.mapSpeedBumps,\r\n      ...this.exitPortalsHidden,\r\n      ...this.exitPortalsOpened\r\n    ];\r\n\r\n    this.turnService.register(new TurnEventSubscription(20, () => {\r\n      this.checkWispsCloseToRalph();\r\n      this.checkSpeedBoostsCloseToRalph();\r\n      this.checkSpeedBumpsCloseToRalph();\r\n      this.checkExitPortalCloseToRalph();\r\n    }));\r\n\r\n    //--------------------------------------------------------\r\n    // ***                                                ***\r\n    //\r\n    //  Update number of seconds passed\r\n    //\r\n    // ***                                                ***\r\n    //--------------------------------------------------------\r\n    this.turnService.register(new TurnEventSubscription(1, event => {\r\n      // Update the time if game hasn't finished\r\n      if (this.gameState.getValue() !== LavaState.CaughtAllWisps &&\r\n        this.gameState.getValue() !== LavaState.GotOutWithMinRequiredWisps) {\r\n        this.secondsPassed = Math.round(\r\n          (new Date().getTime() - this.startTime.getTime()) / 1000);\r\n      } else {\r\n        event.unsubscribe();\r\n      }\r\n    }));\r\n\r\n    //--------------------------------------------------------\r\n    // ***                                                ***\r\n    //\r\n    //  Set up notifications\r\n    //\r\n    // ***                                                ***\r\n    //--------------------------------------------------------\r\n    let previousState = this.gameState.getValue();\r\n    this.gameState.subscribe((currentState: LavaState) => {\r\n      switch (currentState) {\r\n        case LavaState.Started:\r\n          this.addNotification([\r\n            \"Touch forest wisps to gather their power. Use it to open a portal out of lava land.\",\r\n            \"Brown mushrooms give you swiftness while red mushrooms sap your speed.\"\r\n          ]);\r\n          break;\r\n        case LavaState.CaughtMinRequiredWisps:\r\n          if (previousState !== currentState) {\r\n            this.addNotification([\r\n              \"You have opened the portal in an unknown location!\",\r\n              \"Find it to escape the lava land.\"\r\n            ]);\r\n          }\r\n          break;\r\n        case LavaState.CaughtAllWisps:\r\n          this.addNotification([\r\n            \"Congratulations.\",\r\n            \"You have harnassed all the power of the lava land in \" +\r\n            this.secondsPassed + \" seconds.\"\r\n          ]);\r\n          this.gameOver(\"Wisps\");\r\n          break;\r\n        case LavaState.GotOutWithMinRequiredWisps:\r\n          this.addNotification([\r\n            \"Congratulations.\",\r\n            \"You have successfully escaped the lava land in \" +\r\n            this.secondsPassed + \" seconds.\"\r\n          ]);\r\n          this.gameOver(\"Gate\");\r\n          break;\r\n      }\r\n      previousState = currentState;\r\n    });\r\n\r\n    //--------------------------------------------------------\r\n    // ***                                                ***\r\n    //\r\n    //                  Move player with game engine\r\n    //\r\n    // ***                                                ***\r\n    //--------------------------------------------------------\r\n    this.turnService.register(new TurnEventSubscription(\r\n      1, async (_subscriptionEvent: TurnEventSubscription) => {\r\n        this.player.moveA();\r\n      }));\r\n    // this.playerSpeed.maxSpeed.subscribe((currentSpeed: number) => {\r\n    //   if (currentSpeed > 0) {\r\n    //     this.currentSpeed =\r\n    //       Math.round(this.playerSpeed.maxSpeed.getValue() * 1000) / 10;\r\n    //   }\r\n    // });\r\n\r\n    // Start the game!\r\n    this.gameState.next(LavaState.Started);\r\n\r\n    if (isDebug()) {\r\n      this.gameOver(\"Debug\");\r\n    }\r\n  }\r\n\r\n  public currentPlayerMovementRequest(event: {\r\n    world: WorldCoordinates;\r\n    canvas: WorldCoordinates;\r\n  }): void {\r\n    this.player.queueMoveTo(event);\r\n  }\r\n\r\n  private async startGame() { }\r\n\r\n  private addObjectToMap<T>(TConstructor: { new(ass: LavaCanvas.Asset): T; },\r\n    url: string,\r\n    assetColor = LavaCanvas.AssetColor.OriginalColor,\r\n    displaySize: WorldCoordinates = { x: 1, y: 1 }): T {\r\n    return new TConstructor(new LavaCanvas.Asset(url, assetColor, displaySize));\r\n  }\r\n\r\n  private async checkSpeedBoostsCloseToRalph() {\r\n    for (let boost of this.mapSpeedBoosters) {\r\n      if ((await boost.checkIfCouldTouch(\r\n        await this.player.getCoordinate(), this.playerInfluenceRadius,\r\n        this.playerInfluenceRadius)) === true) {\r\n        boost.performTouch();\r\n        this.player.playerSpeed.speedBoost();\r\n      }\r\n    }\r\n  }\r\n\r\n  private async checkSpeedBumpsCloseToRalph() {\r\n    for (let speedBump of this.mapSpeedBumps) {\r\n      if ((await speedBump.checkIfCouldTouch(await this.player.getCoordinate(),\r\n        1, 1)) === true) {\r\n        // console.log(`Speed bump!`);\r\n        speedBump.performTouch();\r\n        this.player.playerSpeed.speedBump();\r\n      }\r\n    }\r\n  }\r\n\r\n  private async checkExitPortalCloseToRalph() {\r\n    if (this.gameState.getValue() === LavaState.CaughtMinRequiredWisps) {\r\n      for (let exitPortal of this.exitPortalsOpened) {\r\n        if ((await exitPortal.checkIfCouldTouch(\r\n          await this.player.getCoordinate(), 1, 1)) === true) {\r\n          this.gameState.next(LavaState.GotOutWithMinRequiredWisps);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkWispsCloseToRalph() {\r\n    for (let wisp of this.mapWisps) {\r\n      this.checkWispCloseToRalph(wisp);\r\n    }\r\n  }\r\n\r\n  private async checkWispCloseToRalph(wisp: Wisp) {\r\n    if ((await wisp.checkIfCouldCatch(this.player.getCoordinate(),\r\n      this.playerInfluenceRadius,\r\n      this.playerInfluenceRadius)) === true) {\r\n      this.caughtWisp(wisp);\r\n    }\r\n  }\r\n\r\n  private caughtWisp(wisp: Wisp) {\r\n    if (wisp.performCatch()) {\r\n      if (this.gameState.getValue() === LavaState.Started) {\r\n        this.gameState.next(LavaState.CaughtWisp);\r\n      }\r\n      this.numberOfWispsCaught += 1;\r\n      if (isDebug()) {\r\n        if (this.numberOfWispsCaught > 1) {\r\n          this.gameState.next(LavaState.CaughtAllWisps);\r\n        } else if (true) {\r\n          this.gameState.next(LavaState.CaughtMinRequiredWisps);\r\n          for (let i = 0; i < 5; i += 1) {\r\n            const exitPortal = this.exitPortalsHidden.pop();\r\n            exitPortal.setShown();\r\n            this.exitPortalsOpened.push(exitPortal);\r\n          }\r\n        }\r\n      } else if (this.numberOfWispsCaught === this.mapWisps.length) {\r\n        this.gameState.next(LavaState.CaughtAllWisps);\r\n      } else if (this.numberOfWispsCaught > 0.6 * this.mapWisps.length) {\r\n        this.gameState.next(LavaState.CaughtMinRequiredWisps);\r\n        const exitPortal = this.exitPortalsHidden.pop();\r\n        exitPortal.setShown();\r\n        this.exitPortalsOpened.push(exitPortal);\r\n      }\r\n    }\r\n    if (this.playerInfluenceRadius < 5) {\r\n      const newInfluenceRadius =\r\n        Math.floor(100 * Math.min(this.playerInfluenceRadius * 1.1, 5)) / 100;\r\n      const diff = newInfluenceRadius - this.playerInfluenceRadius;\r\n      this.turnService.register(new TurnEventSubscription(1000, sub => {\r\n        sub.unsubscribe();\r\n        if (this.playerInfluenceRadius >= 1) {\r\n          this.playerInfluenceRadius -= diff;\r\n        }\r\n      }));\r\n      this.playerInfluenceRadius += diff;\r\n    }\r\n  }\r\n\r\n  public currentRadius() {\r\n    return Math.floor(this.playerInfluenceRadius * 10) / 10;\r\n  }\r\n\r\n  public addNotification(texts: string[]) {\r\n    if (texts.length > 0) {\r\n      this.notificationText.push(...texts);\r\n      this.turnService.register(new TurnEventSubscription(1000, event => {\r\n        const i = this.notificationText.indexOf(texts[0]);\r\n        this.notificationText.splice(i, texts.length);\r\n        event.unsubscribe();\r\n      }));\r\n    }\r\n  }\r\n\r\n  private gameOver(finishMethod: \"Gate\" | \"Wisps\" | \"Debug\") {\r\n    let name: string;\r\n    if (finishMethod !== \"Debug\") {\r\n      this.player.playerSpeed.stop();\r\n    }\r\n    const dialogRef = this.dialog.open(\r\n      LavaGameFinishComponent,\r\n      { width: \"600px\", data: { name, time: this.secondsPassed } });\r\n\r\n    dialogRef.afterClosed().subscribe(name => {\r\n      this.backendService.gameOver(name, this.secondsPassed, finishMethod);\r\n    });\r\n  }\r\n\r\n  public showLeaderboard(leaderboard: LeaderboardData) {\r\n    const dialogRef = this.dialog.open(LavaLeaderboardComponent,\r\n      { width: \"600px\", data: leaderboard });\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// import { AppRoutingModule } from './app-routing.module';\r\nimport { LavaLandComponent } from './app.component';\r\nimport { LavaStatisticsComponent } from './lava-statistics/lava-statistics.component';\r\nimport { LavaNotificationComponent } from './lava-notification/lava-notification.component';\r\nimport { LavaHeaderComponent } from './lava-header/lava-header.component';\r\nimport { LavaGameFinishComponent } from './lava-game-finish/lava-game-finish.component';\r\nimport { LavaLeaderboardComponent } from './lava-leaderboard/lava-leaderboard.component';\r\nimport { TurnService } from './turn.service';\r\nimport { BackendService } from './backend.service';\r\nimport { LavaCanvasModule } from \"../lavacanvas/lavacanvas.module\";\r\nimport { MatDialogModule, MatInputModule, MatButtonModule } from '@angular/material';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LavaLandComponent,\r\n    LavaStatisticsComponent,\r\n    LavaNotificationComponent,\r\n    LavaHeaderComponent,\r\n    LavaGameFinishComponent,\r\n    LavaLeaderboardComponent\r\n  ],\r\n  entryComponents: [LavaGameFinishComponent, LavaLeaderboardComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    LavaCanvasModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [TurnService, BackendService],\r\n  bootstrap: [LavaLandComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n  ClientMessageReasons,\r\n  GameMap,\r\n  GameSessionRequestResponse,\r\n  MapFinished,\r\n  MapFinishedResponse,\r\n} from '../../../lavalandcommon';\r\nimport { isDebug } from './isDebug';\r\nimport { LeaderboardData } from './lava-leaderboard/lava-leaderboard.component';\r\n\r\nconst devModeApiPaths = {\r\n  [ClientMessageReasons.GameSessionRequest]: \"http://localhost:8080/api/gamesession/\",\r\n  [ClientMessageReasons.LeaderboardRequest]: \"http://localhost:8080/api/leaderboard/\",\r\n  [ClientMessageReasons.MapFinished]: \"http://localhost:8080/api/mapfinished/\",\r\n};\r\nconst productionApiPaths = {\r\n  [ClientMessageReasons.GameSessionRequest]: \"/api/gamesession/\",\r\n  [ClientMessageReasons.LeaderboardRequest]: \"/api/leaderboard/\",\r\n  [ClientMessageReasons.MapFinished]: \"/api/mapfinished/\",\r\n}\r\nconst apiPaths = isDebug() ? devModeApiPaths : productionApiPaths;\r\n\r\n@Injectable()\r\nexport class BackendService {\r\n  private gameId: string = null;\r\n  private map: Subject<GameMap> = new Subject();\r\n  private leaderboard: Subject<LeaderboardData> = new Subject();\r\n  readonly $map = this.map.asObservable();\r\n  readonly $leaderboard = this.leaderboard.asObservable();\r\n  constructor(private http: HttpClient) {\r\n    this.initGameSession();\r\n  }\r\n\r\n  private async initGameSession() {\r\n    const response = await fetch(apiPaths[ClientMessageReasons.GameSessionRequest]);\r\n    const gameSessionRequestResponse: GameSessionRequestResponse = await response.json();\r\n    console.log('initGameSession', gameSessionRequestResponse);\r\n    this.gameId = gameSessionRequestResponse.gameId;\r\n    this.map.next(gameSessionRequestResponse.gameMap);\r\n  }\r\n\r\n  public async gameOver(\r\n    name: string,\r\n    duration: number,\r\n    finishMethod: \"Gate\" | \"Wisps\" | \"Debug\"\r\n  ) {\r\n    const mapFinishedRequest: MapFinished = {\r\n      duration,\r\n      finishMethod,\r\n      gameId: this.gameId,\r\n      name\r\n    };\r\n    console.log(mapFinishedRequest)\r\n    const mapFinishedResponse = await this.http.post<MapFinishedResponse>(apiPaths[ClientMessageReasons.MapFinished], mapFinishedRequest).toPromise();\r\n    this.leaderboard.next(mapFinishedResponse.leaderboard);\r\n  }\r\n}\r\n","import { TouchableObject } from \"./touchableObject\";\r\nimport { WorldObjectInternal } from \"../lavacanvas/worldobjectinternal\";\r\nimport * as LavaCanvas from \"../lavacanvas\";\r\n\r\nexport class ExitPortal extends TouchableObject {\r\n  constructor(asset: LavaCanvas.Asset) {\r\n    super(asset);\r\n    const oldInit = this.oninit;\r\n    this.oninit = obj => {\r\n      if (oldInit != null) {\r\n        oldInit(obj);\r\n      }\r\n      obj.hidden = true;\r\n    };\r\n  }\r\n\r\n  public setShown() {\r\n    this.onturn = obj => {\r\n      obj.hidden = false;\r\n      this.onturn = undefined;\r\n    };\r\n  }\r\n  public setHidden() {\r\n    this.onturn = obj => {\r\n      obj.hidden = true;\r\n      this.onturn = undefined;\r\n    };\r\n  }\r\n}\r\n","export function isDebug() {\r\n    return false;\r\n}","export default \"@import url(//fonts.googleapis.com/css?family=Caveat);\\r\\n:host {\\r\\n  border-width: 1px;\\r\\n  margin: 0;\\r\\n  color: rgb(75, 3, 75);\\r\\n  font-size: 2.5vw;\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n}\\r\\nh1 {\\r\\n  text-align: center;\\r\\n  font-size: 4vw;\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n}\\r\\nh3 {\\r\\n  font-size: 2vw;\\r\\n  font-family: \\\"Helvetica Neue\\\", sans-serif;\\r\\n}\\r\\np {\\r\\n  color: darkred;\\r\\n  font-size: 1.5vw;\\r\\n  font-family: \\\"Helvetica Neue\\\", sans-serif;\\r\\n}\\r\\n@media screen and (min-width: 1000px) {\\r\\n  :host {\\r\\n    font-size: 25px;\\r\\n  }\\r\\n  h1 {\\r\\n    font-size: 40px;\\r\\n  }\\r\\n  h3 {\\r\\n    font-size: 20px;\\r\\n  }\\r\\n  p {\\r\\n    font-size: 15px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF2YS1nYW1lLWZpbmlzaC9sYXZhLWdhbWUtZmluaXNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscURBQXFEO0FBQ3JEO0VBQ0UsaUJBQWlCO0VBQ2pCLFNBQVM7RUFDVCxxQkFBcUI7RUFDckIsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtBQUNoQztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCw4QkFBOEI7QUFDaEM7QUFFQTtFQUNFLGNBQWM7RUFDZCx5Q0FBeUM7QUFDM0M7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIseUNBQXlDO0FBQzNDO0FBRUE7RUFDRTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGVBQWU7RUFDakI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2xhdmEtZ2FtZS1maW5pc2gvbGF2YS1nYW1lLWZpbmlzaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoLy9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUNhdmVhdCk7XHJcbjpob3N0IHtcclxuICBib3JkZXItd2lkdGg6IDFweDtcclxuICBtYXJnaW46IDA7XHJcbiAgY29sb3I6IHJnYig3NSwgMywgNzUpO1xyXG4gIGZvbnQtc2l6ZTogMi41dnc7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2F2ZWF0XCIsIGN1cnNpdmU7XHJcbn1cclxuXHJcbmgxIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiA0dnc7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2F2ZWF0XCIsIGN1cnNpdmU7XHJcbn1cclxuXHJcbmgzIHtcclxuICBmb250LXNpemU6IDJ2dztcclxuICBmb250LWZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5wIHtcclxuICBjb2xvcjogZGFya3JlZDtcclxuICBmb250LXNpemU6IDEuNXZ3O1xyXG4gIGZvbnQtZmFtaWx5OiBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xyXG4gIDpob3N0IHtcclxuICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICB9XHJcbiAgaDEge1xyXG4gICAgZm9udC1zaXplOiA0MHB4O1xyXG4gIH1cclxuICBoMyB7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgfVxyXG4gIHAge1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, Inject, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nexport interface GameFinishedData {\r\n  name: string;\r\n  time: number;\r\n}\r\n@Component({\r\n  selector: \"lava-game-finish\",\r\n  templateUrl: \"./lava-game-finish.component.html\",\r\n  styleUrls: [\"./lava-game-finish.component.css\"]\r\n})\r\nexport class LavaGameFinishComponent {\r\n  public invalidName = true;\r\n  @ViewChild(\"nameField\", { static: true }) nameField: ElementRef;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LavaGameFinishComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: GameFinishedData\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  public onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  public checkName(): void {\r\n    const inputElement = this.nameField.nativeElement as HTMLInputElement;\r\n    if (inputElement.value.length > 0) {\r\n      this.invalidName = !(this.nameField\r\n        .nativeElement as HTMLInputElement).checkValidity();\r\n    } else {\r\n      this.invalidName = true;\r\n    }\r\n  }\r\n\r\n  public ok(): void {\r\n    this.dialogRef.close(this.data.name);\r\n  }\r\n}\r\n","export default \"@import url(//fonts.googleapis.com/css?family=Caveat);\\r\\n:host {\\r\\n  border-width: 1px;\\r\\n  margin: 0;\\r\\n  color: rgb(223, 183, 223);\\r\\n  font-size: 3.5vw;\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n  text-shadow: 2px 2px rgb(0, 0, 0);\\r\\n}\\r\\nh1,\\r\\n.h1 {\\r\\n  text-align: center;\\r\\n  margin: 0;\\r\\n}\\r\\n@media screen and (min-width: 1000px) {\\r\\n  :host {\\r\\n    font-size: 35px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF2YS1oZWFkZXIvbGF2YS1oZWFkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQ7QUFDckQ7RUFDRSxpQkFBaUI7RUFDakIsU0FBUztFQUNULHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsOEJBQThCO0VBQzlCLGlDQUFpQztBQUNuQztBQUNBOztFQUVFLGtCQUFrQjtFQUNsQixTQUFTO0FBQ1g7QUFFQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbGF2YS1oZWFkZXIvbGF2YS1oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DYXZlYXQpO1xyXG46aG9zdCB7XHJcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGNvbG9yOiByZ2IoMjIzLCAxODMsIDIyMyk7XHJcbiAgZm9udC1zaXplOiAzLjV2dztcclxuICBmb250LWZhbWlseTogXCJDYXZlYXRcIiwgY3Vyc2l2ZTtcclxuICB0ZXh0LXNoYWRvdzogMnB4IDJweCByZ2IoMCwgMCwgMCk7XHJcbn1cclxuaDEsXHJcbi5oMSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XHJcbiAgOmhvc3Qge1xyXG4gICAgZm9udC1zaXplOiAzNXB4O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"lavaheader\",\r\n  templateUrl: \"./lava-header.component.html\",\r\n  styleUrls: [\"./lava-header.component.css\"]\r\n})\r\nexport class LavaHeaderComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","export default \"@import url(//fonts.googleapis.com/css?family=Caveat);\\r\\n:host {\\r\\n  border-width: 1px;\\r\\n  margin: 0;\\r\\n  color: rgb(223, 183, 223);\\r\\n  font-size: 3.5vw;\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n  text-shadow: 2px 2px rgb(0, 0, 0);\\r\\n}\\r\\nol {\\r\\n  overflow: auto;\\r\\n  max-height: 600px;\\r\\n}\\r\\nh1 {\\r\\n  text-align: center;\\r\\n  margin: 0;\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n  font-size: 3.5vw;\\r\\n}\\r\\n@media screen and (min-width: 1000px) {\\r\\n  :host {\\r\\n    font-size: 35px;\\r\\n  }\\r\\n  h1 {\\r\\n    font-size: 35px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF2YS1sZWFkZXJib2FyZC9sYXZhLWxlYWRlcmJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscURBQXFEO0FBQ3JEO0VBQ0UsaUJBQWlCO0VBQ2pCLFNBQVM7RUFDVCx5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtFQUM5QixpQ0FBaUM7QUFDbkM7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7QUFDbkI7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsOEJBQThCO0VBQzlCLGdCQUFnQjtBQUNsQjtBQUVBO0VBQ0U7SUFDRSxlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxlQUFlO0VBQ2pCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9sYXZhLWxlYWRlcmJvYXJkL2xhdmEtbGVhZGVyYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DYXZlYXQpO1xyXG46aG9zdCB7XHJcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGNvbG9yOiByZ2IoMjIzLCAxODMsIDIyMyk7XHJcbiAgZm9udC1zaXplOiAzLjV2dztcclxuICBmb250LWZhbWlseTogXCJDYXZlYXRcIiwgY3Vyc2l2ZTtcclxuICB0ZXh0LXNoYWRvdzogMnB4IDJweCByZ2IoMCwgMCwgMCk7XHJcbn1cclxuXHJcbm9sIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxuICBtYXgtaGVpZ2h0OiA2MDBweDtcclxufVxyXG5cclxuaDEge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW46IDA7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2F2ZWF0XCIsIGN1cnNpdmU7XHJcbiAgZm9udC1zaXplOiAzLjV2dztcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XHJcbiAgOmhvc3Qge1xyXG4gICAgZm9udC1zaXplOiAzNXB4O1xyXG4gIH1cclxuICBoMSB7XHJcbiAgICBmb250LXNpemU6IDM1cHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport type LeaderboardData = { name: string; duration: number }[];\r\n@Component({\r\n  selector: \"lava-leaderboard\",\r\n  templateUrl: \"./lava-leaderboard.component.html\",\r\n  styleUrls: [\"./lava-leaderboard.component.css\"]\r\n})\r\nexport class LavaLeaderboardComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LavaLeaderboardComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: LeaderboardData\r\n  ) {\r\n  }\r\n}\r\n","export default \"@import url(//fonts.googleapis.com/css?family=Caveat);\\r\\n:host {\\r\\n  border-color: (0, 0, 0);\\r\\n  border-style: solid;\\r\\n  border-width: 1px;\\r\\n  background-color: rgba(0, 0, 0, 0.3);\\r\\n  margin: 0;\\r\\n  padding: 0 1em;\\r\\n  color: rgb(223, 183, 223);\\r\\n  font-size: 2.5vw;\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n  text-shadow: 2px 2px rgb(0, 0, 0);\\r\\n}\\r\\np {\\r\\n  text-align: center;\\r\\n  margin: 0.5em;\\r\\n}\\r\\n@media screen and (min-width: 1000px) {\\r\\n  :host {\\r\\n    font-size: 25px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF2YS1ub3RpZmljYXRpb24vbGF2YS1ub3RpZmljYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQ7QUFDckQ7RUFDRSx1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixvQ0FBb0M7RUFDcEMsU0FBUztFQUNULGNBQWM7RUFDZCx5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtFQUM5QixpQ0FBaUM7QUFDbkM7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0FBQ2Y7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvbGF2YS1ub3RpZmljYXRpb24vbGF2YS1ub3RpZmljYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DYXZlYXQpO1xyXG46aG9zdCB7XHJcbiAgYm9yZGVyLWNvbG9yOiAoMCwgMCwgMCk7XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICBib3JkZXItd2lkdGg6IDFweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDAgMWVtO1xyXG4gIGNvbG9yOiByZ2IoMjIzLCAxODMsIDIyMyk7XHJcbiAgZm9udC1zaXplOiAyLjV2dztcclxuICBmb250LWZhbWlseTogXCJDYXZlYXRcIiwgY3Vyc2l2ZTtcclxuICB0ZXh0LXNoYWRvdzogMnB4IDJweCByZ2IoMCwgMCwgMCk7XHJcbn1cclxucCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbjogMC41ZW07XHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XHJcbiAgOmhvc3Qge1xyXG4gICAgZm9udC1zaXplOiAyNXB4O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnChanges, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"lavanotification\",\r\n  templateUrl: \"./lava-notification.component.html\",\r\n  styleUrls: [\"./lava-notification.component.css\"]\r\n})\r\nexport class LavaNotificationComponent {\r\n  @Input() notificationText: string;\r\n  constructor() {}\r\n}\r\n","export default \"@import url(//fonts.googleapis.com/css?family=Caveat);\\r\\n:host {\\r\\n  border-color: (0, 0, 0);\\r\\n  border-style: solid;\\r\\n  border-width: 1px;\\r\\n  background-color: rgba(0, 0, 0, 0.3);\\r\\n  margin: 0;\\r\\n  padding: 0.5em 0.5em;\\r\\n  color: rgb(223, 183, 223);\\r\\n  text-shadow: 2px 2px rgb(0, 0, 0);\\r\\n  font-size: 2.5vw;\\r\\n  font-family: \\\"Caveat\\\", cursive;\\r\\n}\\r\\nh3,\\r\\n.h3 {\\r\\n  text-align: center;\\r\\n}\\r\\n.title {\\r\\n  padding-right: 1em;\\r\\n}\\r\\n.value {\\r\\n  min-width: 2em;\\r\\n}\\r\\n@media screen and (min-width: 1000px) {\\r\\n  :host {\\r\\n    font-size: 25px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF2YS1zdGF0aXN0aWNzL2xhdmEtc3RhdGlzdGljcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRDtBQUNyRDtFQUNFLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLG9DQUFvQztFQUNwQyxTQUFTO0VBQ1Qsb0JBQW9CO0VBQ3BCLHlCQUF5QjtFQUN6QixpQ0FBaUM7RUFDakMsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtBQUNoQztBQUNBOztFQUVFLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBRUE7RUFDRSxjQUFjO0FBQ2hCO0FBRUE7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2xhdmEtc3RhdGlzdGljcy9sYXZhLXN0YXRpc3RpY3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKC8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1DYXZlYXQpO1xyXG46aG9zdCB7XHJcbiAgYm9yZGVyLWNvbG9yOiAoMCwgMCwgMCk7XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICBib3JkZXItd2lkdGg6IDFweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDAuNWVtIDAuNWVtO1xyXG4gIGNvbG9yOiByZ2IoMjIzLCAxODMsIDIyMyk7XHJcbiAgdGV4dC1zaGFkb3c6IDJweCAycHggcmdiKDAsIDAsIDApO1xyXG4gIGZvbnQtc2l6ZTogMi41dnc7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2F2ZWF0XCIsIGN1cnNpdmU7XHJcbn1cclxuaDMsXHJcbi5oMyB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4udGl0bGUge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDFlbTtcclxufVxyXG5cclxuLnZhbHVlIHtcclxuICBtaW4td2lkdGg6IDJlbTtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XHJcbiAgOmhvc3Qge1xyXG4gICAgZm9udC1zaXplOiAyNXB4O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"lavastatistics\",\r\n  templateUrl: \"./lava-statistics.component.html\",\r\n  styleUrls: [\"./lava-statistics.component.css\"]\r\n})\r\nexport class LavaStatisticsComponent implements OnInit {\r\n  @Input() remainingWisps: number;\r\n  @Input() currentSpeed: number;\r\n  @Input() currentRadius: number;\r\n  @Input() numberOfSeconds: number;\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","export enum LavaState {\r\n  Starting,\r\n  Started,\r\n  CaughtWisp,\r\n  CaughtMinRequiredWisps,\r\n  GotOutWithMinRequiredWisps,\r\n  CaughtAllWisps\r\n}\r\n","import { WorldCoordinates } from \"../../../lavalandcommon\";\r\nimport * as LavaCanvas from \"../lavacanvas\";\r\nimport { WorldObjectInternal } from \"../lavacanvas/worldobjectinternal\";\r\nimport { PlayerSpeed } from \"./playerSpeed\";\r\n\r\nexport class PlayerObject extends LavaCanvas.WorldObject {\r\n  protected isInCooldown = false;\r\n  private stolenObject: WorldObjectInternal;\r\n  private nextTurnActions: ((obj: WorldObjectInternal) => void)[] = [];\r\n  private movementQueued: {\r\n    world: WorldCoordinates;\r\n    canvas: WorldCoordinates;\r\n  } = { world: { x: 0, y: 0 }, canvas: { x: 0, y: 0 } };\r\n  readonly playerSpeed = new PlayerSpeed(2.5, 0.8);\r\n  public currentSpeed: number = 0;\r\n  private lastMovementTime = new Date().getTime();\r\n\r\n  constructor(asset: LavaCanvas.Asset) {\r\n    super(asset);\r\n    this.oninit = obj => {\r\n      obj.setRandomCoordinate();\r\n      this.stolenObject = obj;\r\n    };\r\n    this.onturn = obj => this.turn(obj);\r\n  }\r\n\r\n  private turn(obj: WorldObjectInternal) {\r\n    for (let turnAction of this.nextTurnActions) {\r\n      turnAction(obj);\r\n    }\r\n    this.nextTurnActions = [];\r\n  }\r\n\r\n  private async move(movement: WorldCoordinates): Promise<number> {\r\n    return this.stolenObject.move(movement, false);\r\n  }\r\n\r\n  public async moveA() {\r\n    const currentTime = new Date().getTime();\r\n    const dT = currentTime - this.lastMovementTime;\r\n    this.lastMovementTime = currentTime;\r\n    if (\r\n      Math.abs(this.movementQueued.world.x) < 1e-10 &&\r\n      Math.abs(this.movementQueued.world.y) < 1e-10\r\n    ) {\r\n      this.movementQueued.canvas = { x: 0, y: 0 };\r\n      this.movementQueued.world = { x: 0, y: 0 };\r\n      this.asset.showOriginal();\r\n      this.currentSpeed = 0;\r\n      return;\r\n    }\r\n    let movementDirection = {\r\n      x: this.movementQueued.world.x,\r\n      y: this.movementQueued.world.y\r\n    };\r\n    const speedBoosterConstant = 0.01;\r\n    movementDirection.x *= speedBoosterConstant;\r\n    movementDirection.y *= speedBoosterConstant;\r\n\r\n    const maxSpeedNormalizerConstant = 0.003 * dT;\r\n    const maxSpeedNormalizer =\r\n      maxSpeedNormalizerConstant * this.playerSpeed.maxSpeed.getValue();\r\n\r\n    const totalSpeed = Math.sqrt(\r\n      movementDirection.x * movementDirection.x +\r\n      movementDirection.y * movementDirection.y\r\n    );\r\n    const maxSpeedFactor = maxSpeedNormalizer / totalSpeed;\r\n    if (totalSpeed > maxSpeedNormalizer) {\r\n      this.movementQueued.world.x -= this.movementQueued.world.x * speedBoosterConstant * maxSpeedFactor;\r\n      this.movementQueued.world.y -= this.movementQueued.world.y * speedBoosterConstant * maxSpeedFactor;\r\n      movementDirection.x *= maxSpeedFactor;\r\n      movementDirection.y *= maxSpeedFactor;\r\n    }\r\n    else {\r\n      this.movementQueued.world.x *= 1 - speedBoosterConstant;\r\n      this.movementQueued.world.y *= 1 - speedBoosterConstant;\r\n    }\r\n    const movementSpeed = await this.move(movementDirection);\r\n    this.currentSpeed = Math.round(\r\n      (movementSpeed / maxSpeedNormalizerConstant) * 100\r\n    );\r\n  }\r\n\r\n  public async queueMoveTo(direction: {\r\n    world: WorldCoordinates;\r\n    canvas: WorldCoordinates;\r\n  }) {\r\n    this.movementQueued = direction;\r\n  }\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\n\r\nexport class PlayerSpeed {\r\n  public maxSpeed = new BehaviorSubject<number>(1);\r\n  constructor(private playerMaxSpeed = 2.5, private playerMinSpeed = 0.75) {}\r\n\r\n  changeSpeedTo(newSpeed: number) {\r\n    newSpeed = Math.min(newSpeed, this.playerMaxSpeed);\r\n    newSpeed = Math.max(newSpeed, this.playerMinSpeed);\r\n    this.maxSpeed.next(newSpeed);\r\n  }\r\n\r\n  public speedBoost() {\r\n    const currentSpeed = this.maxSpeed.getValue();\r\n    if (currentSpeed < 1) {\r\n      this.changeSpeedTo(1);\r\n    } else if (currentSpeed < this.playerMaxSpeed) {\r\n      this.changeSpeedTo(currentSpeed + 0.05);\r\n    }\r\n  }\r\n\r\n  public speedBump() {\r\n    const currentSpeed = this.maxSpeed.getValue();\r\n    if (currentSpeed < 1) {\r\n      this.changeSpeedTo(currentSpeed - 0.05);\r\n    } else {\r\n      this.changeSpeedTo(currentSpeed - 0.1);\r\n    }\r\n  }\r\n\r\n  public stop() {\r\n    this.maxSpeed.next(0);\r\n  }\r\n}\r\n","import { TurnEventSubscription } from \"./turnevent\";\r\nimport { TouchableObject } from \"./touchableObject\";\r\n\r\nexport class SpeedBoost extends TouchableObject {\r\n  protected setTouch() {\r\n    this.isInCooldown = true;\r\n    this.asset.showDarkBlur(true);\r\n    this.turnService.register(\r\n      new TurnEventSubscription(1000, (sub: TurnEventSubscription) => {\r\n        this.asset.showOriginal();\r\n        this.isInCooldown = false;\r\n        sub.unsubscribe();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { TouchableObject } from \"./touchableObject\";\r\n\r\nexport class SpeedBump extends TouchableObject {}\r\n","import {WorldCoordinates} from \"../../../lavalandcommon\";\r\nimport {TurnEventSubscription} from \"./turnevent\";\r\nimport {TurnService} from \"./turn.service\";\r\nimport * as LavaCanvas from \"../lavacanvas\";\r\n\r\nexport class TouchableObject extends LavaCanvas.WorldObject {\r\n  protected isInCooldown = false;\r\n  constructor(asset: LavaCanvas.Asset) {\r\n    super(asset);\r\n    this.oninit = obj => { obj.setRandomCoordinate(); };\r\n  }\r\n\r\n  public async checkIfCouldTouch(targetCoordinate: WorldCoordinates,\r\n                                 xRadius = 3, yRadius = 3) {\r\n    const currentCoordinate = await this.getCoordinate();\r\n    if (this.isInCooldown) {\r\n      return false;\r\n    } else if (currentCoordinate.x - targetCoordinate.x > xRadius) {\r\n      return false;\r\n    } else if (currentCoordinate.x - targetCoordinate.x < -xRadius) {\r\n      return false;\r\n    } else if (currentCoordinate.y - targetCoordinate.y > yRadius) {\r\n      return false;\r\n    } else if (currentCoordinate.y - targetCoordinate.y < -yRadius) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public performTouch() { this.setTouch(); }\r\n\r\n  protected setTouch() {}\r\n}\r\n","import { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { TurnEventSubscription } from \"./turnevent\";\r\ntype TurnEvents = TurnEventForService[];\r\n\r\n@Injectable()\r\nexport class TurnService implements OnDestroy {\r\n  private heartbeatInterval: number;\r\n\r\n  // priority to turn events\r\n  private turnEvents: Map<number, TurnEvents> = new Map();\r\n\r\n  // priority array\r\n  private allPriorities: Array<number> = [];\r\n\r\n  register(turnEvent: TurnEventSubscription) {\r\n    const turnEventObjectForThisService = new TurnEventForService(turnEvent);\r\n    const prio = turnEvent.priority;\r\n    if (this.turnEvents.has(prio)) {\r\n      const prioEvents = this.turnEvents.get(prio);\r\n      const idx = prioEvents.push(turnEventObjectForThisService) - 1;\r\n      turnEventObjectForThisService.unsubscribe = () => {\r\n        prioEvents[idx] = null;\r\n      };\r\n    } else {\r\n      const prioEvents = [turnEventObjectForThisService];\r\n      turnEventObjectForThisService.unsubscribe = () => {\r\n        prioEvents[0] = null;\r\n      };\r\n      this.turnEvents.set(prio, prioEvents);\r\n      this.allPriorities.push(prio);\r\n      this.allPriorities.sort();\r\n    }\r\n  }\r\n\r\n  constructor() {\r\n    this.heartbeatInterval = window.setInterval(() => {\r\n      this.processEvent();\r\n    }, 10);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    window.clearInterval(this.heartbeatInterval);\r\n  }\r\n\r\n  processEvent() {\r\n    this.allPriorities.forEach(priority => {\r\n      const eventsForThisPriority = this.turnEvents.get(priority);\r\n      if (Array.isArray(eventsForThisPriority)) {\r\n        eventsForThisPriority.forEach(eventForThisPriority => {\r\n          if (eventForThisPriority != null) {\r\n            eventForThisPriority.process();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nclass TurnEventForService {\r\n  public currentStrength = 0;\r\n  public unsubscribe: Function;\r\n  constructor(public ev: TurnEventSubscription) {\r\n    ev.unsubscribe = () => {\r\n      this.unsubscribe();\r\n    };\r\n  }\r\n\r\n  process() {\r\n    this.currentStrength += 1 / this.ev.numberOfTurns;\r\n    if (this.currentStrength >= 1) {\r\n      this.currentStrength -= 1;\r\n      this.ev.fncProcessOccurence(this.ev);\r\n    }\r\n  }\r\n}\r\n","// readonly numberOfTurns : number; // executed every this many of turns\r\n// readonly priority: number; // higher valued events will be considered first\r\n// readonly fncProcessOccurence : Function; // Function that is called when cumulative strength is 1\r\n\r\nexport class TurnEventSubscription {\r\n  public unsubscribe: Function; // Populated by the subscription event\r\n  constructor(\r\n    public numberOfTurns: number,\r\n    public fncProcessOccurence: (TurnEventSubscription) => void,\r\n    public priority = 9\r\n  ) {}\r\n}\r\n","import * as LavaCanvas from \"../lavacanvas\";\r\nimport { WorldCoordinates } from \"../../../lavalandcommon\";\r\nimport { TurnService } from \"./turn.service\";\r\nimport { TurnEventSubscription } from \"./turnevent\";\r\nimport { WorldObjectInternal } from \"../lavacanvas/worldobjectinternal\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\n\r\nexport class Wisp extends LavaCanvas.WorldObject {\r\n  private moveAround = true;\r\n  private isGhost = false;\r\n  private caughtOnce = false;\r\n  private setHideLaterCounter = 0;\r\n  constructor(asset: LavaCanvas.Asset) {\r\n    super(asset);\r\n    this.oninit = obj => {\r\n      obj.setRandomCoordinate();\r\n    };\r\n    this.onturn = obj => this.turn(obj);\r\n  }\r\n\r\n  public startMoveAround() {\r\n    this.moveAround = true;\r\n  }\r\n\r\n  public stopMoveAround() {\r\n    this.moveAround = false;\r\n  }\r\n\r\n  private turn(obj: WorldObjectInternal) {\r\n    if (this.setHideLaterCounter > 0 ) {\r\n      this.setHideLaterCounter -= 1;\r\n      if (this.setHideLaterCounter === 0) {\r\n        obj.hidden = true;\r\n      }\r\n    }\r\n    if (!this.moveAround) {\r\n      return;\r\n    } else {\r\n      // Select a random direction\r\n      const moveThisTime = Math.random() > 0.4;\r\n      if (moveThisTime === true) {\r\n        const rollX = Math.random() - 0.5;\r\n        const rollY = Math.random() - 0.5;\r\n        obj.move({ x: rollX, y: rollY });\r\n      } else {\r\n        // don't move\r\n        obj.move();\r\n      }\r\n    }\r\n  }\r\n\r\n  public async checkIfCouldCatch(\r\n    targetCoordinate: WorldCoordinates,\r\n    xRadius = 3,\r\n    yRadius = 3\r\n  ) {\r\n    const wispCoordinate = await this.getCoordinate();\r\n    if (this.isGhost) {\r\n      return false;\r\n    } else if (wispCoordinate.x - targetCoordinate.x > xRadius) {\r\n      return false;\r\n    } else if (wispCoordinate.x - targetCoordinate.x < -xRadius) {\r\n      return false;\r\n    } else if (wispCoordinate.y - targetCoordinate.y > yRadius) {\r\n      return false;\r\n    } else if (wispCoordinate.y - targetCoordinate.y < -yRadius) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Returns true if this is the first time this wisp is caught\r\n  public performCatch() {\r\n    this.setCaught();\r\n    this.setHideLaterCounter = 5;\r\n    if (this.caughtOnce) {\r\n      return false;\r\n    } else {\r\n      this.caughtOnce = true;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public performCatchWithComeback() {\r\n    this.setCaught();\r\n    this.setComeback();\r\n    if (this.caughtOnce) {\r\n      return false;\r\n    } else {\r\n      this.caughtOnce = true;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private setCaught() {\r\n    this.isGhost = true;\r\n    this.stopMoveAround();\r\n    this.asset.showDarkBlur(true);\r\n  }\r\n\r\n  private setComeback() {\r\n    this.turnService.register(\r\n      new TurnEventSubscription(1000, (sub: TurnEventSubscription) => {\r\n        this.asset.showOriginal();\r\n        this.startMoveAround();\r\n        this.isGhost = false;\r\n        sub.unsubscribe();\r\n      })\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import * as ImageFilters from \"canvas-filters\";\r\nimport { WorldCoordinates } from \"../../../lavalandcommon\";\r\nimport { world2Canvas } from \"./world2canvas\";\r\n\r\nexport enum AssetColor {\r\n  RandomColor,\r\n  OriginalColor\r\n}\r\nexport class Asset {\r\n  private imageSrc: Promise<HTMLCanvasElement | HTMLImageElement>;\r\n  private imageCur: HTMLImageElement;\r\n  private assetCanvas: HTMLCanvasElement;\r\n  private canvasFilter: Function;\r\n  private displaySize = world2Canvas(this.displaySizeInTiles);\r\n  constructor(\r\n    private imageUrl: string,\r\n    private assetColor = AssetColor.OriginalColor,\r\n    private displaySizeInTiles: WorldCoordinates = { x: 1.1, y: 1.1 }\r\n  ) {\r\n    this.assetCanvas = document.createElement(\"canvas\");\r\n    this.imageSrc = this.init();\r\n    this.drawOriginal();\r\n  }\r\n\r\n  private async init() {\r\n    const im = await loadImageAsync(this.imageUrl);\r\n    const imageCanvas = document.createElement(\"canvas\");\r\n    const scaleRatio = Math.max(\r\n      this.displaySize.x / im.width,\r\n      this.displaySize.y / im.height\r\n    );\r\n    imageCanvas.width = this.displaySize.x * 2;\r\n    imageCanvas.height = this.displaySize.y * 2;\r\n    const ctx = imageCanvas.getContext(\"2d\");\r\n    ctx.scale(scaleRatio, scaleRatio);\r\n\r\n    ctx.drawImage(im, 0, 0);\r\n    if (this.assetColor === AssetColor.RandomColor) {\r\n      // create an ImageData for the area you want to apply the filter.\r\n      const imageData = ctx.getImageData(\r\n        0,\r\n        0,\r\n        imageCanvas.width,\r\n        imageCanvas.height\r\n      );\r\n      // pass it to a filter and get the modified copy\r\n      const filtered = ImageFilters.HSLAdjustment(\r\n        imageData,\r\n        Math.random() * 360,\r\n        0,\r\n        0\r\n      );\r\n      // const blurred = ImageFilters.BoxBlur(filtered);\r\n      // put it back into a context to view the results\r\n      ctx.putImageData(filtered, 0, 0);\r\n    }\r\n    return imageCanvas;\r\n  }\r\n\r\n  private async drawOriginal() {\r\n    const { ctx, im } = await this.getClearContext();\r\n    ctx.drawImage(im, 0, 0);\r\n    if (this.canvasFilter) {\r\n      this.canvasFilter();\r\n    }\r\n  }\r\n\r\n  private async drawOriginalHelper(\r\n    ctx: CanvasRenderingContext2D,\r\n    im: HTMLCanvasElement | HTMLImageElement\r\n  ) {\r\n    ctx.drawImage(im, 0, 0);\r\n    // if (this.canvasFilter) {\r\n    //   this.canvasFilter();\r\n    // }\r\n  }\r\n\r\n  public async image() {\r\n    // Wait for first image drawing to finish\r\n    await this.imageSrc;\r\n    // Then return filled canvas\r\n    return this.assetCanvas;\r\n  }\r\n\r\n  public offset() {\r\n    return { x: this.displaySize.x / 2, y: this.displaySize.y / 2 };\r\n  }\r\n\r\n  public async showMotionBlur(x: number, y: number, strength = 2) {\r\n    const { ctx, im } = await this.getClearContext();\r\n    if (y !== 0) {\r\n      ctx.globalAlpha = 1 / strength / 5;\r\n      for (let yStep = 0; yStep < strength; yStep += 1) {\r\n        ctx.drawImage(im, 0, yStep);\r\n        if (this.canvasFilter) {\r\n          this.canvasFilter();\r\n        }\r\n      }\r\n      ctx.globalAlpha = 1;\r\n    } else if (x !== 0) {\r\n      ctx.globalAlpha = 1 / strength / 5;\r\n      for (let xStep = 0; xStep < strength; xStep += 1) {\r\n        ctx.drawImage(im, xStep, 0);\r\n        if (this.canvasFilter) {\r\n          this.canvasFilter();\r\n        }\r\n      }\r\n      ctx.globalAlpha = 1;\r\n    }\r\n  }\r\n\r\n  public async showDarkBlur(isDarkAndBlurry = true) {\r\n    this.canvasFilter = () => {\r\n      const ctx = this.assetCanvas.getContext(\"2d\");\r\n      // create an ImageData for the area you want to apply the filter.\r\n      const imageData = ctx.getImageData(\r\n        0,\r\n        0,\r\n        this.assetCanvas.width,\r\n        this.assetCanvas.height\r\n      );\r\n      // pass it to a filter and get the modified copy\r\n      const filtered = ImageFilters.GrayScale(imageData);\r\n      // const blurred = ImageFilters.BoxBlur(filtered);\r\n      // put it back into a context to view the results\r\n      ctx.putImageData(filtered, 0, 0);\r\n      return this.assetCanvas;\r\n    };\r\n    this.drawOriginal();\r\n  }\r\n\r\n  public async showOriginal() {\r\n    this.canvasFilter = null;\r\n    this.drawOriginal();\r\n  }\r\n\r\n  private async getClearContext() {\r\n    const im = await this.imageSrc;\r\n    this.assetCanvas.width = im.width;\r\n    this.assetCanvas.height = im.height;\r\n    const ctx = this.assetCanvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, this.assetCanvas.width, this.assetCanvas.height);\r\n    return { ctx, im };\r\n  }\r\n\r\n  private async filterCanvas() {}\r\n}\r\n\r\nfunction loadImageAsync(src: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const tileGraphic = new Image();\r\n    tileGraphic.src = src;\r\n    tileGraphic.onload = () => {\r\n      resolve(tileGraphic);\r\n    };\r\n    tileGraphic.onerror = err => {\r\n      reject(err);\r\n    };\r\n  });\r\n}\r\n","import { WorldCoordinates } from \"../../../lavalandcommon\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { world2Canvas } from \"./world2canvas\";\r\nimport { LavaCanvasInternal } from \"./lavacanvasinternal.service\";\r\n\r\nexport class CanvasEventHandler {\r\n  private mapSizeInTiles = this.lavacanvasInternal.getMapSize().max;\r\n  private mapSizeInPixels = world2Canvas(this.mapSizeInTiles);\r\n  public interactionDirection = new BehaviorSubject<WorldCoordinates>({\r\n    x: 0,\r\n    y: 0\r\n  });\r\n\r\n  private isTouch = false;\r\n\r\n  constructor(\r\n    private canvas: HTMLCanvasElement,\r\n    private lavacanvasInternal: LavaCanvasInternal\r\n  ) {\r\n    let following = false;\r\n    this.canvas.onmousedown = event => {\r\n      if (!following) {\r\n        this.fncStartFollowingMouse(event);\r\n        following = true;\r\n      } else {\r\n        this.fncStopFollowingMouse(event);\r\n        following = false;\r\n      }\r\n    };\r\n\r\n    this.canvas.ontouchstart = event => {\r\n      if (this.isTouch === false) {\r\n        this.isTouch = true;\r\n        this.canvas.onmousedown = () => {};\r\n        this.canvas.onmousemove = () => {};\r\n      }\r\n      this.handleInteractLocation(\r\n        event.touches[0].clientX,\r\n        event.touches[0].clientY\r\n      );\r\n      this.canvas.ontouchmove = event =>\r\n        this.handleInteractLocation(\r\n          event.touches[0].clientX,\r\n          event.touches[0].clientY\r\n        );\r\n    };\r\n    this.canvas.ontouchend = event => {\r\n      this.canvas.ontouchmove = () => {};\r\n    };\r\n  }\r\n\r\n  private fncStartFollowingMouse(event: MouseEvent) {\r\n    // console.log(\"Started mouse\");\r\n    this.fncMouseMove(event);\r\n    this.canvas.onmousemove = event => this.fncMouseMove(event);\r\n  }\r\n\r\n  private fncStopFollowingMouse(event: MouseEvent) {\r\n    // console.log(\"Stopped mouse\");\r\n    this.canvas.onmousemove = () => {};\r\n    this.interactionDirection.next({ x: 0, y: 0 });\r\n  }\r\n\r\n  private fncMouseMove(event: MouseEvent) {\r\n    this.handleInteractLocation(event.clientX, event.clientY);\r\n  }\r\n\r\n  private canvas2World(eventX: number, eventY: number) {\r\n    // // canvas width: 1536\r\n    // // height: 770\r\n    // // map width: 200 => 6200\r\n    // // map height: 100 => 3100\r\n    // console.log(\r\n    //   this.player.getCoordinates().x, // 50\r\n    //   event.clientX, // 1020\r\n    //   this.player.getCoordinates().y, // 85\r\n    //   event.clientY // 510\r\n    // );\r\n    const rect = this.canvas.getBoundingClientRect();\r\n\r\n    let x = eventX - rect.left;\r\n    let y = eventY - rect.top;\r\n\r\n    const translateCoords = this.lavacanvasInternal.getTranslateCoords();\r\n\r\n    x -= translateCoords.x;\r\n    y -= translateCoords.y;\r\n\r\n    const eventWorld: WorldCoordinates = {\r\n      x: (x / this.mapSizeInPixels.x) * this.mapSizeInTiles.x,\r\n      y: (y / this.mapSizeInPixels.y) * this.mapSizeInTiles.y\r\n    };\r\n\r\n    // console.log(\r\n    //   this.player.getCoordinates().x,\r\n    //   eventWorld.x,\r\n    //   this.player.getCoordinates().y,\r\n    //   eventWorld.y\r\n    // );\r\n\r\n    return eventWorld;\r\n  }\r\n\r\n  private async handleInteractLocation(eventX: number, eventY: number) {\r\n    const pos = this.canvas2World(eventX, eventY);\r\n    const centerPos = await this.lavacanvasInternal.centralObject.getCoordinate();\r\n    const xDif = pos.x - centerPos.x;\r\n    const yDif = pos.y - centerPos.y;\r\n    // console.log(xDif, yDif);\r\n    this.interactionDirection.next({ x: xDif, y: yDif });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  HostListener\r\n} from \"@angular/core\";\r\nimport { LavaCanvasInternal, MapSettings } from \"./lavacanvasinternal.service\";\r\nimport { CanvasEventHandler } from \"./canvaseventhandler\";\r\nimport { setAssetSize, canvas2World, world2Canvas } from \"./world2canvas\";\r\nimport { WorldObject } from \"./worldobject\";\r\nimport { WorldCoordinates } from \"../../../lavalandcommon\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { TurnEventSubscription } from \"../app/turnevent\";\r\nimport { TurnService } from \"../app/turn.service\";\r\nimport { WorldObjectInternal } from \"./worldobjectinternal\";\r\nimport { ReplaySubject } from \"rxjs/internal/ReplaySubject\";\r\nimport { isDebug } from 'src/app/isDebug';\r\nexport { WorldObject } from \"./worldobject\";\r\nexport { MapSettings } from \"./lavacanvasinternal.service\";\r\nexport { Asset, AssetColor } from \"./asset\";\r\n@Component({\r\n  selector: \"lavaCanvas\",\r\n  template: \"<canvas #canvasContainer></canvas>\",\r\n  styles: [\r\n    `\r\n      canvas {\r\n        flex-grow: 1;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class LavaLandComponent implements OnInit, OnChanges {\r\n  @ViewChild(\"canvasContainer\", { read: ElementRef, static: true })\r\n  public screenCanvas: ElementRef;\r\n  @Input() public settings: MapSettings;\r\n  @Input() public objects: WorldObject[];\r\n  @Input() public player: WorldObject;\r\n  private canvasObjects: WorldObjectInternal[] = [];\r\n  private canvas: HTMLCanvasElement;\r\n  private canvasEventHandler: CanvasEventHandler;\r\n  private mapDragSubject = new ReplaySubject<{\r\n    world: WorldCoordinates;\r\n    canvas: WorldCoordinates;\r\n  }>(1);\r\n  @Output() public mapDragRequest = this.mapDragSubject.asObservable();\r\n  constructor(\r\n    private lavacanvasInternal: LavaCanvasInternal,\r\n    private turnService: TurnService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.canvas = this.screenCanvas.nativeElement as HTMLCanvasElement;\r\n    this.onResize();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.settings != null) {\r\n      this.lavacanvasInternal.setSettings(this.settings).catch(ex => {\r\n        if (isDebug()) {\r\n          console.warn(\"Error while constructing the map!\");\r\n          console.error(ex);\r\n        }\r\n      });\r\n      this.turnService.register(\r\n        new TurnEventSubscription(\r\n          1,\r\n          () => {\r\n            const ctx = this.canvas.getContext(\"2d\");\r\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.lavacanvasInternal.drawMap(ctx, this.canvasObjects);\r\n          },\r\n          1\r\n        )\r\n      );\r\n\r\n      this.canvasEventHandler = new CanvasEventHandler(\r\n        this.canvas,\r\n        this.lavacanvasInternal\r\n      );\r\n      this.canvasEventHandler.interactionDirection\r\n        .pipe(\r\n          map(world => {\r\n            const canvas = world2Canvas(world);\r\n            return {\r\n              world,\r\n              canvas\r\n            };\r\n          })\r\n        )\r\n        .subscribe(\r\n          next => this.mapDragSubject.next(next),\r\n          error => this.mapDragSubject.error(error),\r\n          () => this.mapDragSubject.complete\r\n        );\r\n      this.lavacanvasInternal.centralObject = new WorldObjectInternal(\r\n        this.turnService,\r\n        this.lavacanvasInternal,\r\n        this.player\r\n      );\r\n      for (let object of this.objects) {\r\n        this.canvasObjects.push(\r\n          new WorldObjectInternal(\r\n            this.turnService,\r\n            this.lavacanvasInternal,\r\n            object\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  onResize() {\r\n    if (isDebug()) {\r\n      console.log(\r\n        `LavaLandComponent::onResize(): Canvas resized. [${\r\n        this.canvas.clientWidth\r\n        }, ${this.canvas.clientHeight}]`\r\n      );\r\n    }\r\n    const isPortrait: boolean = this.canvas.clientHeight > this.canvas.clientWidth;\r\n    if (isPortrait) {\r\n      // this.canvas.height = 560;\r\n      // this.canvas.width = 320;\r\n      setAssetSize(30, 30);\r\n    }\r\n    else {\r\n      // this.canvas.width = 1680;\r\n      // this.canvas.height = 720;\r\n      setAssetSize(60, 60);\r\n    }\r\n    this.canvas.height = this.canvas.clientHeight;\r\n    this.canvas.width = this.canvas.clientWidth;\r\n    // const nMaxUnitsToDisplay = 30;\r\n    // if (this.canvas.width > this.canvas.height) {\r\n    //   // landscape mode\r\n    //   const unitSize = this.canvas.width / nMaxUnitsToDisplay;\r\n    //   setAssetSize(unitSize, unitSize);\r\n    // } else {\r\n    //   // portrait mode\r\n    //   const unitSize = this.canvas.height / nMaxUnitsToDisplay;\r\n    //   setAssetSize(unitSize, unitSize);\r\n    // }\r\n    this.lavacanvasInternal.clearDraw();\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { LavaCanvasInternal } from \"./lavacanvasinternal.service\";\r\nimport { LavaLandComponent } from \"./lavacanvas.component\";\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [LavaCanvasInternal],\r\n  exports: [LavaLandComponent],\r\n  declarations: [LavaLandComponent]\r\n})\r\nexport class LavaCanvasModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  Neighbors,\r\n  WorldCoordinates,\r\n  GameMap,\r\n  TileType\r\n} from \"../../../lavalandcommon\";\r\nimport { Asset } from \"./asset\";\r\nimport { world2Canvas } from \"./world2canvas\";\r\nimport { WorldObjectInternal } from \"./worldobjectinternal\";\r\nimport { isDebug } from 'src/app/isDebug';\r\nexport interface MapSettings {\r\n  assets: Asset[];\r\n  // transitionProbabilities: number[][],\r\n  map: GameMap;\r\n}\r\n\r\n@Injectable()\r\nexport class LavaCanvasInternal {\r\n  public mapCoordsMin: WorldCoordinates;\r\n  public mapCoordsMax: WorldCoordinates;\r\n  public centerCanvasCoords: WorldCoordinates;\r\n  private backgroundCanvas: HTMLCanvasElement;\r\n  private rendererCanvas: HTMLCanvasElement;\r\n  private translateCoords: WorldCoordinates;\r\n  private settings: MapSettings;\r\n  public centralObject: WorldObjectInternal;\r\n  private screenContextCenterRect = {\r\n    min: { x: 0, y: 0 },\r\n    max: { x: 0, y: 0 },\r\n    initialized: false\r\n  };\r\n  public getMapSize(): {\r\n    min: WorldCoordinates;\r\n    max: WorldCoordinates\r\n  } {\r\n    return {\r\n      min: { x: 0, y: 0 },\r\n      max: { x: this.settings.map.mapWidth, y: this.settings.map.mapHeight }\r\n    };\r\n  }\r\n\r\n  public genWorldCoords(filter: (coords: WorldCoordinates) => boolean):\r\n    WorldCoordinates {\r\n    const min = this.mapCoordsMin;\r\n    const max = this.mapCoordsMax;\r\n    const x = Math.floor(Math.random() * (max.x - min.x) * 0.999) + min.x;\r\n    const y = Math.floor(Math.random() * (max.y - min.y) * 0.999) + min.y;\r\n    const coords = { x, y };\r\n    if (filter(coords)) {\r\n      return coords;\r\n    } else {\r\n      return this.genWorldCoords(filter);\r\n    }\r\n  }\r\n\r\n  public genWorldPassableCoords(): WorldCoordinates {\r\n    const min = this.mapCoordsMin;\r\n    const max = this.mapCoordsMax;\r\n    const x = Math.floor(Math.random() * (max.x - min.x) * 0.999) + min.x;\r\n    const y = Math.floor(Math.random() * (max.y - min.y) * 0.999) + min.y;\r\n    const coords = { x, y };\r\n    if (this.isPassable(coords)) {\r\n      return coords;\r\n    } else {\r\n      return this.genWorldPassableCoords();\r\n    }\r\n  }\r\n\r\n  constructor() { this.translateCoords = { x: 0, y: 0 }; }\r\n\r\n  private async constructMap(): Promise<void> {\r\n    if (isDebug()) {\r\n      console.log(\"LavaCanvasInternal::constructMap(): Constructing map...\");\r\n    }\r\n    this.mapCoordsMax = {\r\n      x: this.settings.map.mapWidth,\r\n      y: this.settings.map.mapHeight\r\n    };\r\n    this.mapCoordsMin = { x: 0, y: 0 };\r\n\r\n    // Create background renderer\r\n    this.backgroundCanvas = document.createElement(\"canvas\");\r\n    const canvasCoords = world2Canvas(this.mapCoordsMax);\r\n    this.backgroundCanvas.width = canvasCoords.x;\r\n    this.backgroundCanvas.height = canvasCoords.y;\r\n\r\n    this.rendererCanvas = document.createElement(\"canvas\");\r\n    this.rendererCanvas.width = canvasCoords.x;\r\n    this.rendererCanvas.height = canvasCoords.y;\r\n\r\n    // Draw assets\r\n    // console.debug('[IsometricMapService] Drawing background...')\r\n    const ctx = this.backgroundCanvas.getContext(\"2d\");\r\n    for (let x = this.mapCoordsMin.x; x < this.mapCoordsMax.x; x += 1) {\r\n      for (let y = this.mapCoordsMin.y; y < this.mapCoordsMax.y; y += 1) {\r\n        const tileIdx = this.settings.map.background[y][x];\r\n        if (tileIdx != null && this.settings.assets.length > tileIdx) {\r\n          const asset = this.settings.assets[tileIdx];\r\n          const canvasCoords = world2Canvas({ x, y });\r\n          ctx.drawImage(await asset.image(), canvasCoords.x, canvasCoords.y);\r\n        }\r\n      }\r\n    }\r\n    if (isDebug()) {\r\n      console.log(\"LavaCanvasInternal::constructMap(): Constructed!\");\r\n    }\r\n  }\r\n\r\n  public async setSettings(settings: MapSettings): Promise<void> {\r\n    if (isDebug()) {\r\n      console.log(`LavaCanvasInternal::setSettings(): Settings received!`);\r\n    }\r\n    this.settings = settings;\r\n    return this.constructMap();\r\n  }\r\n\r\n  public isPassable(coordinates: WorldCoordinates): boolean {\r\n    const type =\r\n      this.settings.map\r\n        .background[Math.round(coordinates.y)][Math.round(coordinates.x)];\r\n    if (type === TileType.Water || type === TileType.Lava) {\r\n      return false;\r\n    } else {\r\n      return type != null;\r\n    }\r\n  }\r\n\r\n  private getCurrentMap(): GameMap { return this.settings.map; }\r\n\r\n  async drawMap(ctx: CanvasRenderingContext2D,\r\n    extraObjects: WorldObjectInternal[] = []) {\r\n    if (this.settings == null) {\r\n      if (isDebug()) {\r\n        console.error(\r\n          \"LavaCanvasInternal::drawMap(): Background not ready to draw!\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    const renderingCtx = this.rendererCanvas.getContext(\"2d\");\r\n\r\n    renderingCtx.drawImage(this.backgroundCanvas, 0, 0);\r\n\r\n    for (let extraObject of extraObjects) {\r\n      if (extraObject.hidden === false) {\r\n        const extraCoordinate = await extraObject.getCoordinate();\r\n        const canvasCoords = world2Canvas(extraCoordinate);\r\n        const asset = extraObject.asset;\r\n        const assetOffset = asset.offset();\r\n        renderingCtx.drawImage(await asset.image(),\r\n          canvasCoords.x - assetOffset.x,\r\n          canvasCoords.y - assetOffset.y);\r\n      }\r\n    }\r\n    const centerCoordinate = await this.centralObject.getCoordinate();\r\n    this.centerCanvasCoords = world2Canvas(centerCoordinate);\r\n    const assetCentralObject = this.centralObject.asset;\r\n    const assetOffsetCentralObject = assetCentralObject.offset();\r\n    renderingCtx.drawImage(\r\n      await assetCentralObject.image(),\r\n      this.centerCanvasCoords.x - assetOffsetCentralObject.x,\r\n      this.centerCanvasCoords.y - assetOffsetCentralObject.y);\r\n\r\n    let drawAgain = false;\r\n    if (!this.screenContextCenterRect.initialized) {\r\n      this.screenContextCenterRect = {\r\n        min: { x: ctx.canvas.width / 2, y: ctx.canvas.height / 2 },\r\n        max: { x: ctx.canvas.width / 2, y: ctx.canvas.height / 2 },\r\n        initialized: true\r\n      };\r\n    }\r\n\r\n    let translateCoordsThisTime = { x: 0, y: 0 };\r\n    if (this.centerCanvasCoords.x < this.screenContextCenterRect.min.x) {\r\n      translateCoordsThisTime.x =\r\n        this.screenContextCenterRect.min.x - this.centerCanvasCoords.x;\r\n    } else if (this.centerCanvasCoords.x > this.screenContextCenterRect.max.x) {\r\n      translateCoordsThisTime.x =\r\n        this.screenContextCenterRect.max.x - this.centerCanvasCoords.x;\r\n    }\r\n\r\n    if (this.centerCanvasCoords.y < this.screenContextCenterRect.min.y) {\r\n      translateCoordsThisTime.y =\r\n        this.screenContextCenterRect.min.y - this.centerCanvasCoords.y;\r\n    } else if (this.centerCanvasCoords.y > this.screenContextCenterRect.max.y) {\r\n      translateCoordsThisTime.y =\r\n        this.screenContextCenterRect.max.y - this.centerCanvasCoords.y;\r\n    }\r\n\r\n    this.screenContextCenterRect.max.x -= translateCoordsThisTime.x;\r\n    this.screenContextCenterRect.min.x -= translateCoordsThisTime.x;\r\n    this.screenContextCenterRect.max.y -= translateCoordsThisTime.y;\r\n    this.screenContextCenterRect.min.y -= translateCoordsThisTime.y;\r\n\r\n    ctx.translate(translateCoordsThisTime.x, translateCoordsThisTime.y);\r\n    this.translateCoords.x += translateCoordsThisTime.x;\r\n    this.translateCoords.y += translateCoordsThisTime.y;\r\n    const imageOffset = world2Canvas({ x: 0.5, y: 0.5 });\r\n\r\n    ctx.drawImage(this.rendererCanvas, -imageOffset.x, -imageOffset.y);\r\n  }\r\n\r\n  clearDraw() { this.screenContextCenterRect.initialized = undefined; }\r\n\r\n  getTranslateCoords() { return this.translateCoords; }\r\n}\r\n\r\nexport interface DrawObject {\r\n  coordinate: WorldCoordinates;\r\n  asset: Asset;\r\n}\r\n","import { WorldCoordinates } from \"../../../lavalandcommon\";\r\n\r\nlet unitAssetWidth = 31;\r\nlet unitAssetHeight = 31;\r\n\r\nexport function setAssetSize(width: number, height: number) {\r\n  unitAssetWidth = width;\r\n  unitAssetHeight = height;\r\n}\r\n\r\nexport function world2Canvas(coords: WorldCoordinates) {\r\n  return {\r\n    x: coords.x * unitAssetWidth,\r\n    y: coords.y * unitAssetHeight\r\n  };\r\n}\r\n\r\nexport function canvas2World(coords: WorldCoordinates) {\r\n  return {\r\n    x: coords.x / unitAssetWidth,\r\n    y: coords.y / unitAssetHeight\r\n  };\r\n}\r\n","import {WorldObjectInternal} from \"./worldobjectinternal\";\r\nimport {Asset} from \"./asset\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport {WorldCoordinates} from \"../../../lavalandcommon\";\r\nimport {TurnService} from \"../app/turn.service\";\r\nimport {take} from \"rxjs/internal/operators/take\";\r\n\r\nexport class WorldObject {\r\n  public coordinate: WorldCoordinates;\r\n  public coordinate$: Observable<WorldCoordinates>;\r\n  public turnService: TurnService;\r\n  constructor(public asset: Asset) {}\r\n  public oninit: (object: WorldObjectInternal) => void;\r\n  public onturn: (object: WorldObjectInternal) => void;\r\n  public onturnSlow: (object: WorldObjectInternal) => void;\r\n  public getCoordinate() { return this.coordinate; }\r\n}\r\n","import { WorldCoordinates } from \"../../../lavalandcommon\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { Asset } from \"./asset\";\r\nimport { LavaCanvasInternal } from \"./lavacanvasinternal.service\";\r\nimport { WorldObject } from \"./worldobject\";\r\nimport { ReplaySubject } from \"rxjs\";\r\nimport { TurnEventSubscription } from \"../app/turnevent\";\r\nimport { TurnService } from \"../app/turn.service\";\r\nimport { take } from \"rxjs/internal/operators/take\";\r\nimport { canvas2World, world2Canvas } from \"./world2canvas\";\r\n\r\nexport class WorldObjectInternal {\r\n  private unitCoordinates: WorldCoordinates = { x: 1, y: 1 };\r\n  private coordinate = new ReplaySubject<WorldCoordinates>(1);\r\n  public coordinate$ = this.coordinate.asObservable();\r\n  public hidden: boolean = false;\r\n  readonly asset = this.object.asset;\r\n\r\n  constructor(\r\n    readonly turnService: TurnService,\r\n    private lavacanvasInternal: LavaCanvasInternal,\r\n    private object: WorldObject\r\n  ) {\r\n    this.object.coordinate$ = this.coordinate$;\r\n    this.coordinate$.subscribe(c => (object.coordinate = c));\r\n    this.object.turnService = this.turnService;\r\n    if (this.object.oninit) {\r\n      this.object.oninit(this);\r\n    }\r\n    this.turnService.register(\r\n      new TurnEventSubscription(\r\n        20,\r\n        () => {\r\n          this.turn();\r\n        },\r\n        8\r\n      )\r\n    );\r\n  }\r\n\r\n  public setCoordinate(coor: WorldCoordinates): void {\r\n    if (this.lavacanvasInternal.isPassable(coor)) {\r\n      this.coordinate.next(coor);\r\n    }\r\n  }\r\n\r\n  public setRandomCoordinate(): WorldCoordinates {\r\n    const coord = this.lavacanvasInternal.genWorldPassableCoords();\r\n    this.setCoordinate(coord);\r\n    return coord;\r\n  }\r\n\r\n  public getCoordinate(): Promise<WorldCoordinates> {\r\n    return this.coordinate$.pipe(take(1)).toPromise();\r\n  }\r\n\r\n  public remove(): void {}\r\n\r\n  public turn() {\r\n    if (this.object.onturn) {\r\n      this.object.onturn(this);\r\n    }\r\n  }\r\n\r\n  public async move(\r\n    movement: WorldCoordinates = { x: 0, y: 0 },\r\n    showBlur = true\r\n  ): Promise<number> {\r\n    const coordinateCanvas = await this.getCoordinate();\r\n    const coordinate = coordinateCanvas;\r\n    const fncShowBlur = (x, y) => {\r\n      if (showBlur === true) {\r\n        this.object.asset.showMotionBlur(\r\n          Math.abs(Math.round(movement.x * 2)),\r\n          Math.abs(Math.round(movement.y * 2))\r\n        );\r\n      }\r\n    };\r\n    const fncMoveExact = () => {\r\n      const nextCoordinates = {\r\n        x: coordinate.x + movement.x,\r\n        y: coordinate.y + movement.y\r\n      };\r\n      if (this.lavacanvasInternal.isPassable(nextCoordinates)) {\r\n        this.setCoordinate(nextCoordinates);\r\n        fncShowBlur(movement.x, movement.y);\r\n        return Math.sqrt(movement.x * movement.x + movement.y * movement.y);\r\n      } else {\r\n        return 0;\r\n      }\r\n    };\r\n    const fncMoveY = () => {\r\n      const nextCoordinates = {\r\n        x: coordinate.x,\r\n        y: coordinate.y + movement.y\r\n      };\r\n      if (this.lavacanvasInternal.isPassable(nextCoordinates)) {\r\n        this.setCoordinate(nextCoordinates);\r\n        fncShowBlur(0, movement.y);\r\n        return Math.abs(movement.y);\r\n      } else {\r\n        return 0;\r\n      }\r\n    };\r\n    const fncMoveX = () => {\r\n      const nextCoordinates = {\r\n        x: coordinate.x + movement.x,\r\n        y: coordinate.y\r\n      };\r\n      if (this.lavacanvasInternal.isPassable(nextCoordinates)) {\r\n        this.setCoordinate(nextCoordinates);\r\n        fncShowBlur(movement.x, 0);\r\n        return Math.abs(movement.x);\r\n      } else {\r\n        return 0;\r\n      }\r\n    };\r\n\r\n    const exactMovement = fncMoveExact();\r\n    if (exactMovement === 0) {\r\n      const yMovement = fncMoveY();\r\n      if (yMovement === 0) {\r\n        const xMovement = fncMoveX();\r\n        if (xMovement === 0) {\r\n          fncShowBlur(0, 0);\r\n          return 0;\r\n        } else {\r\n          return xMovement;\r\n        }\r\n      } else {\r\n        return yMovement;\r\n      }\r\n    } else {\r\n      return exactMovement;\r\n    }\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}